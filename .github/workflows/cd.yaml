name: Build & Push Docker Image

on:
  workflow_dispatch:
  workflow_run:
    workflows:
      - "Build & Test"
    types:
      - completed
    branches:
      - main

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: budgeteur

jobs:
  get-app-version:
    name: Get App Version
    runs-on: ubuntu-latest
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}

    outputs:
      semver: ${{ steps.version.outputs.semver }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Install Dependencies
        run: pip install toml

      - name: Read Version from Cargo.toml
        id: version
        run: |
          VERSION=$(python -c 'import toml; print(toml.load("Cargo.toml")["package"]["version"])')
          echo "semver=${VERSION}" >> "${GITHUB_OUTPUT}"
          echo "${VERSION}"

                    
  build-and-push-image:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    needs: get-app-version

    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
      
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Log in to the Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and Push Docker Image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ needs.get-app-version.outputs.semver }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

# TODO: Once stable (1.0.0), tag image twice, once with full semver and
# again with the major version. This will allow me to pin to a major version
# on my NAS and have it download updates with a single click.

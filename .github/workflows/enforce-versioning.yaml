name: Enforce Versioning

on:
  pull_request:
    branches:
      - main
      - develop

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: anthonydickson/budgeteur

jobs:
  get-version:
    name: Get App Versions
    runs-on: ubuntu-latest

    strategy:
      matrix:
        branch:
          - ${{ github.head_ref }}
          - main

    outputs:
      semver-head: ${{ steps.version.outputs.semver-head }}
      semver-main: ${{ steps.version.outputs.semver-main }}
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          ref: ${{ matrix.branch }}

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      - name: Read Version from Cargo.toml
        id: version
        run: |
          VERSION=$(python -c 'import tomllib; f = open("Cargo.toml", "rb"); print(tomllib.load(f)["package"]["version"])')
          echo "semver-${{ matrix.branch }}=${VERSION}" >> "${GITHUB_OUTPUT}"
          echo "${VERSION}"

                    
  enforce-version-increment:
    name: Check if version must be incremented
    needs: get-version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # The checkout action will checkout as a detached head by default.
          # Setting fetch depth to zero will fetch all branches.
          fetch-depth: 0

      - name: Check version
        run: |
          head_version=${{ needs.get-version.outputs.semver-head }}
          main_version=${{ needs.get-version.outputs.semver-main }}

          ./scripts/check_source_changed.sh -b main
         
          if [[ "$?" -eq 0 ]]; then
            if [[ $head_version == $main_version ]]; then
              echo "Source has not changed and neither has the version, no action needed 😎👍."
              exit 0
            else
              echo "🚨 🖐️👮 Source has not changed, but the version has changed. Change the version back to $main_version! 🚨" >&2
              exit 1
            fi
          elif [[ "$?" -eq 1 ]]; then
            if [[ $head_version == $main_version ]]; then
              echo "🚨 🖐️👮 Source has changed, but the version has not been updated. Increase the version! 🚨" >&2
              exit 1
            else
              echo "Source has changed and so has the version, no action needed 😎👍"
              exit 0
            fi
          else
            exit 1
          fi



